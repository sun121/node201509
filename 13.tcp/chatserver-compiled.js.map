{"version":3,"sources":["chatserver.js"],"names":[],"mappings":";;;;;;;;;AAOA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB,IAAI,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,UAAS,MAAM,EAAC;AAC7C,QAAI,QAAQ,CAAC;AACb,UAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACxB,UAAM,CAAC,cAAc,CAAC,UAAS,GAAG,EAAC,KAAK,EAAC;AACrC,cAAM,CAAC,KAAK,CAAC,WAAW,GAAC,KAAK,GAAC,eAAe,CAAC,CAAC;KACnD,CAAC,CAAC;;AAEN,UAAM,CAAC,EAAE,CAAC,MAAM,EAAC,UAAS,IAAI,EAAC;;AAE7B,YAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;AAC/B,YAAG,QAAQ,EAAC;AACR,qBAAS,CAAC,QAAQ,EAAC,QAAQ,GAAC,GAAG,GAAC,IAAI,GAAC,MAAM,CAAC,CAAC;SAChD,MAAI;AACD,oBAAQ,GAAG,IAAI,CAAC;AAChB,mBAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;AAC3B,qBAAS,CAAC,QAAQ,EAAC,QAAQ,GAAC,YAAY,CAAC,CAAC;SAC7C;KACF,CAAC,CAAC;AACH,UAAM,CAAC,EAAE,CAAC,KAAK,EAAC,YAAU;AACtB,iBAAS,CAAC,QAAQ,EAAC,QAAQ,GAAC,YAAY,CAAC,CAAC;AAC1C,eAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;AAC5B,eAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC5B,CAAC,CAAC;AACA,UAAM,CAAC,EAAE,CAAC,OAAO,EAAC,YAAU,EAE3B,CAAC,CAAC;AACH,UAAM,CAAC,EAAE,CAAC,OAAO,EAAC,YAAU,EAE3B,CAAC,CAAC;CACN,CAAC,CAAA;AACF,SAAS,SAAS,CAAC,QAAQ,EAAC,GAAG,EAAC;AAC5B,SAAI,IAAI,IAAI,IAAI,OAAO,EAAC;AACpB,YAAG,QAAQ,IAAI,IAAI,EACf,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAChC;CACJ;AACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC","file":"chatserver-compiled.js","sourcesContent":["/**\r\n * 1.创建一个服务器\r\n * 2. 客户端可以连接服务器\r\n * 3.客户端可以发言，然后广播给大家\r\n * 4.客户端连接和退出后都要通知大家。\r\n * 5.显示当前的在线人数\r\n */\r\nvar net = require('net');\r\nvar util = require('util');\r\nvar clients = {};\r\nvar server = net.createServer(function(socket){\r\n var nickname;\r\n socket.setEncoding('utf8');\r\n    server.getConnections(function(err,count){\r\n        socket.write('欢迎光临，当前在线'+count+'人，请输入用户名\\r\\n>');\r\n    });\r\n\r\n socket.on('data',function(data){\r\n   //console.log(new Buffer(data));\r\n   data = data.replace(/\\r\\n/,'');\r\n   if(nickname){\r\n       broadcast(nickname,nickname+\":\"+data+'\\r\\n');\r\n   }else{\r\n       nickname = data;\r\n       clients[nickname] = socket;\r\n       broadcast(nickname,nickname+'加入了聊天室\\r\\n');\r\n   }\r\n });\r\n socket.on('end',function(){\r\n     broadcast(nickname,nickname+'离开了聊天室\\r\\n');\r\n     clients[nickname].destroy();\r\n     delete clients[nickname];\r\n });\r\n    socket.on('error',function(){\r\n\r\n    });\r\n    socket.on('close',function(){\r\n\r\n    });\r\n})\r\nfunction broadcast(nickname,msg){\r\n    for(var name in clients){\r\n        if(nickname != name)\r\n            clients[name].write(msg);\r\n    }\r\n}\r\nserver.listen(8088);"]}